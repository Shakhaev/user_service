spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 100
          batch_versioned_data: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channels:
        goal-completed-channel: goal-completed
        mentorship-channel: mentorship_channel
        follower-event-channel: follower-channel
        event-start-event-channel: event-start-channel
        event-start-reminder-event-channel: event-start-reminder-event-channel
        search-appearance-channel: search-appearance-topic
        recommendation-received-channel: recommendation-received
        project-follower-channel: project-follower-channel

        profile-pic-channel: profile-pic-channel
        recommendation-channel: recommendation-given
        premium-bought-channel: premium-bought
        ban-channel: user-ban


server:
  port: 8080

logging:
  level:
    root: info

project-service:
  host: localhost
  port: 8082

payment-service:
  host: localhost
  port: 9080
  base-path: /api
  url: http://${payment-service.host}:${payment-service.port}${payment-service.base-path}

app:
  event:
    batch:
      size: 10
    cron: "0 0 0 * * *"
  promotion:
    user_promotion_views_decrement_cron: '*/10 * * * * *'
    event__promotion_views_decrement_cron: '*/10 * * * * *'
  premium:
    cron:
      premium_remove_scheduler: '0 0 0 ? * SUN *'
  retryable:
    payment_service:
      send_payment:
        max_attempts: 3
        delay: 100
        multiplier: 2
  async-config:
    promotion-task-service:
      core_pool_size: 10
      max_pool_size: 20
      queue_capacity: 1000
      thread_name_prefix: PromotionTaskService-Async-
    premium-service-sync:
      core_pool_size: 10
      max_pool_size: 20
      queue_capacity: 1000
      thread_name_prefix: PremiumService-Async-
    task-executor:
      core-pool-size: 10
      max-pool-size: 20
      queue-capacity: 1000
      thread-name-prefix: TaskExecutor-

services:
  s3:
    endpoint: http://localhost:9000
    accesskey: user
    secretKey: password
    bucketName: userbucket
    avatarMaxSize: 1024
    avatarContentType: image/svg+xml

