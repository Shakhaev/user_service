app:
  user-service:
    goal-service:
      max-goals-amount: 3
    thread-amount: 10

spring:
  mvc:
    servlet:
      path: /api/v1
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channel:
        follower: follower_channel
        skill: skill_channel
        profile-view: profile_view_channel
        recommendation: recommendation_channel
        mentorship:
          accepted: mentorship_accepted_channel
          requested: mentorship_requested_channel
    cache:
      type: redis
      global-minutes-ttl: 10
      users-hours-ttl: 24
      users-cache-name: users

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: news-feed-group-1
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: default-topic
application:
  kafka:
    topics:
      post-topic-name: cache-user
      post-replications-count: 1
      post-partitions-count: 3

      heat-feed-cache-topic-name: heat-feed-cache
      heat-feed-cache-replications-count: 1
      heat-feed-cache-partitions-count: 3
    heat-feed-batch-size: 1000

  servlet:
    multipart:
      max-file-size: 5MB

clear-events:
  batch-size: 100
  scheduler:
    cron: "0 0 0 * * ?"

dicebear:
  base-url: https://api.dicebear.com
  version: 9.x
  style: bottts
  format: jpeg

minio:
  endpoint: http://127.0.0.1:9000
  accessKey: user
  secretKey: password
  bucketName: corpbucket

async:
  thread-name-prefix: AsyncThread-
  core-pool-size: 5
  max-pool-size: 10
  queue_capacity: 25

server:
  port: 8080

logging:
  level:
    root: info

project-service:
  host: localhost
  port: 8082

payment-service:
  host: localhost
  port: 9080